<!doctype html>
<html lang="vi">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width,initial-scale=1" />
  <title>Tool tạo bài chuẩn SEO — dán vào Blogger</title>
  <style>
    :root{--bg:#fff;--muted:#666;--accent:#0b76ff}
    body{font-family:Inter,Segoe UI,Arial;margin:18px;background:var(--bg);color:#111}
    .wrap{max-width:980px;margin:0 auto;padding:18px;border:1px solid #eee;border-radius:10px}
    h1{font-size:20px;margin:0 0 8px}
    label{display:block;margin-top:12px;font-weight:600}
    input[type=text], textarea, select{width:100%;padding:8px;margin-top:6px;border:1px solid #ddd;border-radius:6px;font-size:14px}
    textarea{min-height:140px;font-family:monospace}
    .row{display:flex;gap:12px}
    .col{flex:1}
    button{background:var(--accent);color:#fff;border:none;padding:10px 14px;border-radius:8px;cursor:pointer;margin-top:12px}
    button.secondary{background:#444}
    .result{background:#f8f9fb;border:1px dashed #e2e8f0;padding:12px;border-radius:8px;margin-top:12px;white-space:pre-wrap;font-family:monospace}
    .checklist{margin-top:10px;padding:10px;border-radius:8px;background:#fff;border:1px solid #eee}
    .ok{color:green;font-weight:700}
    .bad{color:#c00;font-weight:700}
    .hint{color:var(--muted);font-size:13px}
    .related{margin-top:10px}
    .small{font-size:13px;color:var(--muted)}
    .flex{display:flex;gap:8px;align-items:center}
  </style>
</head>
<body>
  <div class="wrap">
    <h1>Tool tạo bài chuẩn SEO — dành cho Blogger</h1>
    <p class="small">Điền thông tin, nhấn <strong>Tạo HTML</strong>, sau đó copy phần <code>&lt;article&gt;</code> vào bài viết trên Blogger (chuyển sang chế độ HTML).</p>

    <label>Ngôn ngữ</label>
    <select id="language">
      <option value="vi">Tiếng Việt</option>
      <option value="en">English</option>
    </select>

    <div class="row">
      <div class="col">
        <label>Tiêu đề SEO (title)</label>
        <input id="title" type="text" placeholder="Ví dụ: Ngọc Trinh - Bộ ảnh bikini nóng bỏng 2025" />
      </div>
      <div class="col">
        <label>Slug (url thân thiện) — tự sinh nếu để trống</label>
        <input id="slug" type="text" placeholder="ví dụ: ngoc-trinh-bikini-2025" />
      </div>
    </div>

    <label>Meta description</label>
    <textarea id="description" placeholder="Mô tả ngắn (70–160 ký tự)"></textarea>

    <div class="row">
      <div class="col">
        <label>Ảnh thumbnail (link trực tiếp)</label>
        <input id="thumbnail" type="text" placeholder="https://i.imgur.com/xyz.jpg" />
      </div>
      <div class="col">
        <label>Link video MP4 (tùy chọn)</label>
        <input id="video" type="text" placeholder="https://example.com/video.mp4" />
      </div>
    </div>

    <label>Từ khóa chính (keyword)</label>
    <input id="keyword" type="text" placeholder="ví dụ: gái xinh bikini, ngọc trinh" />

    <label>Chủ đề (topic)</label>
    <input id="topic" type="text" placeholder="ví dụ: bộ ảnh bikini, cosplay, ảnh áo dài" />

    <label>Tên nhân vật (subject)</label>
    <input id="subject" type="text" placeholder="ví dụ: Ngọc Trinh" />

    <label>Thêm nội dung (một đoạn text chuẩn, ~150-400 từ) — content chính</label>
    <textarea id="body" placeholder="Dán nội dung bài viết / mô tả chi tiết ở đây..."></textarea>

    <div class="row">
      <div class="col">
        <label>Author (tác giả)</label>
        <input id="author" type="text" placeholder="Tên tác giả / site" value="GirlXinh.net" />
      </div>
      <div class="col">
        <label>Publish date (YYYY-MM-DD)</label>
        <input id="date" type="text" placeholder="2025-10-19" />
      </div>
    </div>

    <div class="flex">
      <button id="generate">Tạo HTML bài - chuẩn SEO</button>
      <button id="copyArticle" class="secondary">Copy & Copy to Clipboard</button>
    </div>

    <div class="checklist" id="seoChecks">
      <strong>SEO Checklist:</strong>
      <ul id="checksList"></ul>
    </div>

    <label>Kết quả — HTML article (chỉ copy phần &lt;article&gt;)</label>
    <div class="result" id="resultHTML" contenteditable="false"></div>

    <div class="related small">
      <strong>Gợi ý liên kết nội bộ:</strong>
      <div id="relatedLinks">— (tool sẽ tạo placeholder related posts)</div>
    </div>

    <p class="hint">Hướng dẫn nhanh: sau khi tạo, chuyển bài trên Blogger sang chế độ <em>HTML</em> và dán phần &lt;article&gt; vào. Sau khi đăng, submit URL vào Google Search Console để nhanh được index.</p>
  </div>

<script>
/* Utility functions */
function slugify(text) {
  return text.toString().toLowerCase()
    .normalize('NFKD') // remove accents
    .replace(/[\u0300-\u036f]/g, '')
    .replace(/[^a-z0-9\- ]/g, '')
    .trim()
    .replace(/\s+/g, '-')
    .replace(/\-+/g,'-');
}
function escapeHtml(s){ return (s||'').replace(/&/g,'&amp;').replace(/</g,'&lt;').replace(/>/g,'&gt;').replace(/"/g,'&quot;'); }
function shorten(s,n){ return s && s.length>n ? s.slice(0,n-3)+'...' : s || ''; }

/* Main generation */
document.getElementById('generate').addEventListener('click', ()=>{
  const lang = document.getElementById('language').value;
  const title = document.getElementById('title').value.trim();
  const slugInput = document.getElementById('slug').value.trim();
  const desc = document.getElementById('description').value.trim();
  const thumb = document.getElementById('thumbnail').value.trim();
  const video = document.getElementById('video').value.trim();
  const keyword = document.getElementById('keyword').value.trim();
  const topic = document.getElementById('topic').value.trim();
  const subject = document.getElementById('subject').value.trim();
  const body = document.getElementById('body').value.trim();
  const author = document.getElementById('author').value.trim() || 'Author';
  const date = document.getElementById('date').value.trim() || (new Date()).toISOString().slice(0,10);

  // Auto-fill title/desc/simple defaults if empty
  const mainTitle = title || `${subject || topic || 'Bài viết'} - ${keyword || 'Thông tin'}`;
  const metaDesc = desc || (body ? shorten(body.replace(/\n+/g,' '),150) : `Xem ${topic || 'bài viết'} mới nhất về ${subject || ''}`);
  const slug = slugInput || slugify(mainTitle);

  // Build meta tags (these will be in the output article header area for Blogger)
  const metaTags = `
<!-- SEO meta generated by tool -->
<title>${escapeHtml(mainTitle)}</title>
<meta name="description" content="${escapeHtml(metaDesc)}" />
<meta name="keywords" content="${escapeHtml(keyword || topic || subject)}" />
<meta property="og:title" content="${escapeHtml(mainTitle)}" />
<meta property="og:description" content="${escapeHtml(metaDesc)}" />
${ thumb ? `<meta property="og:image" content="${escapeHtml(thumb)}" />` : '' }
<meta property="og:type" content="article" />
<meta name="twitter:card" content="summary_large_image" />
${ thumb ? `<meta name="twitter:image" content="${escapeHtml(thumb)}" />` : '' }
`;

  // JSON-LD schema
  const schema = {
    "@context":"https://schema.org",
    "@type":"Article",
    "headline": mainTitle,
    "description": metaDesc,
    "image": thumb || undefined,
    "author": {"@type":"Person","name": author},
    "publisher": {"@type":"Organization","name": author},
    "datePublished": date,
    "mainEntityOfPage": {"@type":"WebPage","@id": window.location.origin + '/' + slug}
  };
  const jsonLd = `<script type="application/ld+json">${JSON.stringify(schema,null,2)}</script>`;

  // Build article HTML (SEO-friendly structure)
  const articleHtmlParts = [];
  articleHtmlParts.push(metaTags);
  articleHtmlParts.push(jsonLd);

  // Visible header + cover
  const h1 = `<h1>${escapeHtml(mainTitle)}</h1>`;
  const cover = thumb ? `<figure><img src="${escapeHtml(thumb)}" alt="${escapeHtml(subject || mainTitle)}" style="max-width:100%;height:auto" loading="lazy"></figure>` : '';
  const intro = body ? `<p>${escapeHtml((body.split('\n\n')[0]||'')).replace(/\n/g,'<br>')}</p>` : '';

  // Add video block (lazy, not autoplay)
  const videoBlock = video ? `
  <div class="video-wrap" style="margin:12px 0">
    <video controls playsinline preload="metadata" poster="${escapeHtml(thumb||'')}" style="max-width:100%;">
      <source src="${escapeHtml(video)}" type="video/mp4">
      Trình duyệt không hỗ trợ video.
    </video>
  </div>` : '';

  // Create structured content with headings
  let content = '';
  if(body){
    // heuristic: split into paragraphs by double newline
    const paras = body.split(/\n{2,}/).map(p => `<p>${escapeHtml(p).replace(/\n/g,'<br>')}</p>`);
    content = paras.join('\n');
  } else {
    content = `<p>${escapeHtml(topic || 'Nội dung đang cập nhật...')}</p>`;
  }

  // Related posts placeholder (simple)
  const relatedHtml = `
  <aside>
    <h2>Related posts</h2>
    <ul>
      <li><a href="/tag/${slugify(topic||'related-1')}">${escapeHtml(topic || 'Bài liên quan 1')}</a></li>
      <li><a href="/tag/${slugify(subject||'related-2')}">${escapeHtml(subject || 'Bài liên quan 2')}</a></li>
      <li><a href="/search/label/${slugify(keyword||'more')}">Xem thêm: ${escapeHtml(keyword || 'Từ khóa')}</a></li>
    </ul>
  </aside>`;

  // CTA / Social share & download placeholder
  const cta = `
  <div style="margin-top:14px;">
    <p><strong>Download / Share:</strong></p>
    <div style="display:flex;gap:8px;flex-wrap:wrap">
      <a href="${escapeHtml(video||'#')}" target="_blank" rel="noopener" style="padding:8px;border:1px solid #ddd;border-radius:6px;text-decoration:none">Tải video</a>
      <a href="https://www.facebook.com/sharer/sharer.php?u=${encodeURIComponent(window.location.origin + '/' + slug)}" target="_blank" rel="noopener" style="padding:8px;border:1px solid #ddd;border-radius:6px;text-decoration:none">Share Facebook</a>
    </div>
  </div>`;

  // Compose final article block (intended to paste inside Blogger post content)
  const articleBlock = `
<article itemscope itemtype="https://schema.org/Article">
  <!-- SEO header (micro copy for Blogger head insertion; Blogger may ignore <title> here) -->
  ${metaTags}
  ${jsonLd}

  ${h1}
  <p class="small">Published: <time itemprop="datePublished" datetime="${date}">${date}</time> • Author: <span itemprop="author">${escapeHtml(author)}</span></p>

  ${cover}
  ${videoBlock}

  <section itemprop="articleBody">
    ${intro}
    ${content}
  </section>

  ${cta}
  ${relatedHtml}
  <footer style="margin-top:18px">
    <p class="small">Tags: <a href="/search/label/${slugify(keyword||topic||'tag')}">${escapeHtml(keyword||topic||'Tag')}</a></p>
  </footer>
</article>
`;

  // SEO checklist checks
  const checks = [];
  // title length
  checks.push({
    ok: mainTitle.length>10 && mainTitle.length<=70,
    text: `Title length: ${mainTitle.length} chars (optimal 10-70)`
  });
  // meta description
  checks.push({
    ok: metaDesc.length>=50 && metaDesc.length<=160,
    text: `Meta description length: ${metaDesc.length} chars (optimal 50-160)`
  });
  // H1 present
  checks.push({
    ok: !!mainTitle,
    text: `H1 present`
  });
  // thumbnail alt present
  checks.push({
    ok: !!thumb,
    text: `Thumbnail present: ${thumb ? 'Yes' : 'No'}`
  });
  // keyword in first 100 words
  const first100 = (body || '').split(/\s+/).slice(0,100).join(' ').toLowerCase();
  checks.push({
    ok: keyword ? first100.includes(keyword.toLowerCase()) : true,
    text: `Primary keyword "${keyword||'(empty)'}" appears in first 100 words: ${keyword ? (first100.includes(keyword.toLowerCase())? 'Yes':'No') : 'N/A'}`
  });
  // json-ld present
  checks.push({ ok: true, text: 'Schema JSON-LD included' });

  // Render checklist
  const listEl = document.getElementById('checksList');
  listEl.innerHTML = '';
  checks.forEach(c => {
    const li = document.createElement('li');
    li.innerHTML = (c.ok ? '<span class="ok">✓</span> ' : '<span class="bad">✕</span> ') + escapeHtml(c.text);
    listEl.appendChild(li);
  });

  // Render result HTML
  document.getElementById('resultHTML').textContent = articleBlock;

  // Related links area
  document.getElementById('relatedLinks').innerHTML = `
    <a href="/search/label/${slugify(topic||'topic')}" style="margin-right:10px">${escapeHtml(topic||'Topic')}</a>
    <a href="/search/label/${slugify(subject||'subject')}">${escapeHtml(subject||'Subject')}</a>
  `;
});

/* Copy button */
document.getElementById('copyArticle').addEventListener('click', ()=>{
  const el = document.getElementById('resultHTML');
  const range = document.createRange();
  range.selectNodeContents(el);
  const sel = window.getSelection();
  sel.removeAllRanges();
  sel.addRange(range);
  try{
    document.execCommand('copy');
    alert('✅ Đã copy HTML article vào Clipboard. Chuyển sang chế độ HTML trong Blogger và dán (Ctrl+V).');
  }catch(e){
    alert('Không thể copy tự động — hãy bôi đen toàn bộ vùng kết quả và sao chép thủ công.');
  }
});
</script>
</body>
</html>
